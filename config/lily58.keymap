/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        select_word_mac: select_word_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LEFT_SHIFT>;

            label = "SELECT_WORD";
        };

        delete_line_mac: delete_line_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp BACKSPACE>;

            label = "DELETE_LINE_MAC";
        };

        delete_line_win: delete_line_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp BACKSPACE>;

            label = "DELETE_LINE_WIN";
        };

        cut_line_mac: cut_line_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp LG(X)>;

            label = "CUT_LINE_MAC";
        };

        cut_line_win: cut_line_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp END>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp LC(X)>;

            label = "CUT_LINE_WIN";
        };
    };

    combos {
        compatible = "zmk,combos";

        base_switch_to_windows {
            bindings = <&to 1>;
            key-positions = <11 49>;
            layers = <0>;
        };

        windows_switch_to_game {
            bindings = <&to 2>;
            key-positions = <11 49>;
            layers = <1>;
        };

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <0 5>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <6 11>;
        };

        game_switch_to_base {
            bindings = <&to 0>;
            key-positions = <11 49>;
            layers = <2>;
        };

        switch_to_system {
            bindings = <&to 8>;
            key-positions = <0 36>;
            layers = <0 1 2>;
        };

        system_switch_to_base {
            bindings = <&to 0>;
            key-positions = <0 36>;
            layers = <8>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <28 31>;
            layers = <0 1>;
        };

        EscFD {
            bindings = <&kp ESCAPE>;
            key-positions = <27 28>;
            layers = <0 1>;
        };

        EscJK {
            bindings = <&kp ESCAPE>;
            key-positions = <32 31>;
            layers = <0 1>;
        };
    };

    behaviors {
        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 55 56 57 54 43 42 53 52 51 50 0 12 24 36>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        HMRR: HMRR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 2 3 4 43 54 55 56 57 11 35 23 49>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        TAPD_Par: TAPD_Par {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPD_PAR";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        TH_layer: TH_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "TH_LAYER";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
        };

        space_layer: space_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            flavor = "hold-preferred";
        };

        backspace_layer: backspace_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "BACKSPACE_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-on-release;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp ESC         &kp N1         &kp N2            &kp N3            &kp N4              &kp N5                                                          &kp N6         &kp N7               &kp N8             &kp N9             &kp N0                 &kp MINUS
&kp TAB         &kp Q          &kp W             &kp E             &kp R               &kp T                                                           &kp Y          &kp U                &kp I              &kp O              &kp P                  &kp EQUAL
&kp LEFT_SHIFT  &HRML LCTRL A  &HRML LEFT_ALT S  &HRML LEFT_GUI D  &HRML LEFT_SHIFT F  &kp G                                                           &kp H          &HMRR RIGHT_SHIFT J  &HMRR RIGHT_GUI K  &HMRR RIGHT_ALT L  &HMRR RCTRL SEMICOLON  &kp SQT
&kp LCTRL       &kp Z          &kp X             &kp C             &kp V               &kp B                         &kp LBKT                &kp RBKT  &kp N          &kp M                &kp COMMA          &kp DOT            &kp FSLH               &kp RIGHT_SHIFT
                                                 &kp LALT          &kp LGUI            &backspace_layer 5 BACKSPACE  &space_layer 7 SPACE    &kp RET   &TH_layer 3 3  &kp BSPC             &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        windows_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "WBase";
            bindings = <
&trans          &trans        &trans  &trans                &trans     &trans                    &trans         &trans  &trans                 &trans  &trans                     &trans
&trans          &trans        &trans  &trans                &trans     &trans                    &trans         &trans  &trans                 &trans  &trans                     &trans
&kp LEFT_SHIFT  &HRML LWIN A  &trans  &HRML LEFT_CONTROL D  &trans     &trans                    &trans         &trans  &HMRR RIGHT_CONTROL K  &trans  &HMRR RIGHT_GUI SEMICOLON  &trans
&kp LEFT_GUI    &trans        &trans  &trans                &trans     &trans  &trans    &trans  &trans         &trans  &trans                 &trans  &trans                     &trans
                                      &kp LEFT_ALT          &kp LCTRL  &mo 5   &trans    &trans  &TH_layer 3 3  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gaming_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "GBase";
            bindings = <
&kp ESC       &kp N1  &kp N2  &kp N3    &kp N4     &kp N5                                &kp N6  &kp N7    &kp N8     &kp N9   &kp N0         &trans
&kp TAB       &kp Q   &kp W   &kp E     &kp R      &kp T                                 &kp Y   &kp U     &kp I      &kp O    &kp P          &kp EQUAL
&kp LSHIFT    &kp A   &kp S   &kp D     &kp F      &kp G                                 &kp H   &kp J     &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_GUI  &kp Z   &kp X   &kp C     &kp V      &kp B           &kp ENTER    &trans   &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH       &kp RSHFT
                              &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &kp SPACE    &kp RET  &mo 3   &kp BSPC  &kp RGUI
            >;

            label = "Gaming";
        };

        symbol_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Sym";
            bindings = <
&kp ESC           &kp F1             &kp F2            &kp F3                &kp F4                 &kp F5                                   &kp F6        &kp F7         &kp F8  &kp F9  &kp F10    &kp F11
&kp GRAVE         &kp EXCL           &kp AT_SIGN       &kp LBKT              &kp RBKT               &kp MINUS                                &kp SLASH     &kp N7         &kp N8  &kp N9  &kp ASTRK  &kp F12
&kp LS(GRAVE)     &kp LS(BACKSLASH)  &kp LA(NUMBER_3)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE                           &kp COLON     &kp N4         &kp N5  &kp N6  &kp PLUS   &none
&kp SINGLE_QUOTE  &kp BACKSLASH      &kp LS(POUND)     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOUBLE_QUOTES  &none        &none    &kp NUMBER_0  &kp N1         &kp N2  &kp N3  &kp EQUAL  &none
                                                       &kp LEFT_ALT          &kp LEFT_COMMAND       &none              &kp SPACE    &kp RET  &tog 3        &kp BACKSPACE  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        windows_symbol_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "WSym";
            bindings = <
&trans    &trans           &trans             &trans  &trans  &trans                         &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans           &kp DOUBLE_QUOTES  &trans  &trans  &trans                         &trans  &trans  &trans  &trans  &trans  &trans
&kp PIPE  &kp LS(NUBS)     &kp BACKSLASH      &trans  &trans  &trans                         &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp NON_US_BSLH  &trans             &trans  &trans  &kp AT_SIGN  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans  &trans  &none        &trans    &trans  &tog 3  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Nav";
            bindings = <
&trans     &kp LG(LS(Z))      &trans                &kp LC(LS(TAB))   &kp LC(TAB)             &kp LG(R)                        &kp INS        &trans              &trans          &trans         &trans  &trans
&kp GRAVE  &kp LC(H)          &cut_line_mac         &delete_line_mac  &kp LG(TAB)             &kp ENTER                        &kp PAGE_UP    &kp LG(LEFT)        &kp UP_ARROW    &kp LG(RIGHT)  &none   &none
&none      &HRML LCTRL LG(Z)  &HRML LEFT_ALT LG(X)  &HRML LGUI LG(C)  &HRML LEFT_SHIFT LG(V)  &kp BACKSPACE                    &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT      &none   &none
&none      &none              &none                 &none             &none                   &kp DELETE     &trans    &trans  &kp DELETE     &kp RA(LEFT_ARROW)  &none           &kp LA(RIGHT)  &none   &none
                                                    &trans            &trans                  &trans         &trans    &trans  &trans         &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        windows_nav_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "WNav";
            bindings = <
&trans  &trans                &trans                &trans             &trans                  &kp LC(F5)                    &trans  &trans              &trans  &trans         &trans  &trans
&trans  &trans                &cut_line_win         &delete_line_win   &kp LA(TAB)             &trans                        &trans  &kp HOME            &trans  &kp END        &trans  &trans
&trans  &HRML LEFT_GUI LC(Z)  &HRML LEFT_ALT LC(X)  &HRML LCTRL LC(C)  &HRML LEFT_SHIFT LC(V)  &trans                        &trans  &trans              &trans  &trans         &trans  &trans
&trans  &trans                &trans                &trans             &trans                  &trans      &trans    &trans  &trans  &kp LC(LEFT_ARROW)  &trans  &kp LC(RIGHT)  &trans  &trans
                                                    &trans             &trans                  &trans      &trans    &trans  &trans  &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mac_space_layer {
            bindings = <
&trans  &trans  &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))  &kp LC(LA(RET))   &kp LC(LA(DOWN))                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(NUMBER_6)  &kp LG(N5)         &kp LG(NUMBER_4)  &trans                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(NUMBER_3)  &kp LG(NUMBER_2)   &kp LG(NUMBER_1)  &trans                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans            &trans             &trans            &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans             &trans            &trans            &trans    &trans  &trans  &trans  &trans
            >;

            label = "MSpace";
        };

        win_space_layer {
            bindings = <
&trans  &trans  &kp LG(LEFT_ARROW)  &kp LG(RIGHT)     &kp LG(UP_ARROW)  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(NUMBER_6)    &kp LG(N5)        &kp LG(NUMBER_4)  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LG(NUMBER_3)    &kp LG(NUMBER_2)  &kp LG(NUMBER_1)  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans              &trans            &trans            &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans            &trans            &trans  &trans    &trans  &trans  &trans  &trans
            >;

            label = "WSpace";
        };

        keyboard_system {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none                         &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &TAPD_Par     &none                         &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none         &none    &none  &none  &none  &none  &none  &none  &none
                                        &none         &none         &none         &none    &none  &none  &none  &none
            >;

            label = "KSystem";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Windows_Symbol_Activate {
            if-layers = <1 3>;
            then-layer = <4>;
        };

        Windows_Nav_Activate {
            if-layers = <1 5>;
            then-layer = <6>;
        };

        Gaming_Symbol_Activate {
            if-layers = <3 2>;
            then-layer = <4>;
        };

        Gaming_Nav_Activate {
            if-layers = <5 2>;
            then-layer = <6>;
        };

        window_space_activate {
            if-layers = <1 7>;
            then-layer = <8>;
        };
    };
};
